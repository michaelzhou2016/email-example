<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ai.guiji.email.mapper.BillingMailConfigMapper">
  <resultMap id="BaseResultMap" type="ai.guiji.email.entity.BillingMailConfig">
    <id column="mail_type" jdbcType="INTEGER" property="mailType" />
    <result column="mail_subject" jdbcType="VARCHAR" property="mailSubject" />
    <result column="mail_receivers" jdbcType="VARCHAR" property="mailReceivers" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="ai.guiji.email.entity.BillingMailConfig">
    <result column="mail_content" jdbcType="LONGVARCHAR" property="mailContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    mail_type, mail_subject, mail_receivers, create_user, create_time, remark
  </sql>
  <sql id="Blob_Column_List">
    mail_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="ai.guiji.email.entity.BillingMailConfigExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from billing_mail_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="ai.guiji.email.entity.BillingMailConfigExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from billing_mail_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from billing_mail_config
    where mail_type = #{mailType,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from billing_mail_config
    where mail_type = #{mailType,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="ai.guiji.email.entity.BillingMailConfigExample">
    delete from billing_mail_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ai.guiji.email.entity.BillingMailConfig">
    insert into billing_mail_config (mail_type, mail_subject, mail_receivers, 
      create_user, create_time, remark, 
      mail_content)
    values (#{mailType,jdbcType=INTEGER}, #{mailSubject,jdbcType=VARCHAR}, #{mailReceivers,jdbcType=VARCHAR}, 
      #{createUser,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, 
      #{mailContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="ai.guiji.email.entity.BillingMailConfig">
    insert into billing_mail_config
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="mailType != null">
        mail_type,
      </if>
      <if test="mailSubject != null">
        mail_subject,
      </if>
      <if test="mailReceivers != null">
        mail_receivers,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="mailContent != null">
        mail_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="mailType != null">
        #{mailType,jdbcType=INTEGER},
      </if>
      <if test="mailSubject != null">
        #{mailSubject,jdbcType=VARCHAR},
      </if>
      <if test="mailReceivers != null">
        #{mailReceivers,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="mailContent != null">
        #{mailContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ai.guiji.email.entity.BillingMailConfigExample" resultType="java.lang.Long">
    select count(*) from billing_mail_config
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update billing_mail_config
    <set>
      <if test="record.mailType != null">
        mail_type = #{record.mailType,jdbcType=INTEGER},
      </if>
      <if test="record.mailSubject != null">
        mail_subject = #{record.mailSubject,jdbcType=VARCHAR},
      </if>
      <if test="record.mailReceivers != null">
        mail_receivers = #{record.mailReceivers,jdbcType=VARCHAR},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.mailContent != null">
        mail_content = #{record.mailContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update billing_mail_config
    set mail_type = #{record.mailType,jdbcType=INTEGER},
      mail_subject = #{record.mailSubject,jdbcType=VARCHAR},
      mail_receivers = #{record.mailReceivers,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      mail_content = #{record.mailContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update billing_mail_config
    set mail_type = #{record.mailType,jdbcType=INTEGER},
      mail_subject = #{record.mailSubject,jdbcType=VARCHAR},
      mail_receivers = #{record.mailReceivers,jdbcType=VARCHAR},
      create_user = #{record.createUser,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ai.guiji.email.entity.BillingMailConfig">
    update billing_mail_config
    <set>
      <if test="mailSubject != null">
        mail_subject = #{mailSubject,jdbcType=VARCHAR},
      </if>
      <if test="mailReceivers != null">
        mail_receivers = #{mailReceivers,jdbcType=VARCHAR},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="mailContent != null">
        mail_content = #{mailContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where mail_type = #{mailType,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="ai.guiji.email.entity.BillingMailConfig">
    update billing_mail_config
    set mail_subject = #{mailSubject,jdbcType=VARCHAR},
      mail_receivers = #{mailReceivers,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      mail_content = #{mailContent,jdbcType=LONGVARCHAR}
    where mail_type = #{mailType,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="ai.guiji.email.entity.BillingMailConfig">
    update billing_mail_config
    set mail_subject = #{mailSubject,jdbcType=VARCHAR},
      mail_receivers = #{mailReceivers,jdbcType=VARCHAR},
      create_user = #{createUser,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR}
    where mail_type = #{mailType,jdbcType=INTEGER}
  </update>
</mapper>